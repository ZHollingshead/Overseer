{
  // "extends": ["tslint:latest"],
  "rulesDirectory": "node_modules/tslint-microsoft-contrib",
  "rules": {

    /**
     * Security Rules. The following rules should be turned on because they find security issues
     * or are recommended in the Microsoft Secure Development Lifecycle (SDL)
     */
    "insecure-random": true,
    "no-banned-terms": true,
    "no-cookies": true,
    "no-delete-expression": true,
    "no-disable-auto-sanitization": true,
    "no-document-domain": true,
    "no-document-write": true,
    "no-eval": true,
    "no-exec-script": true,
    "no-function-constructor-with-string-args": true,
    "no-octal-literal": true,
    "no-string-based-set-immediate": true,
    "no-string-based-set-interval": true,
    "no-string-based-set-timeout": true,
    "non-literal-require": true,
    "possible-timing-attack": true,


    /**
     * Common Bugs and Correctness. The following rules should be turned on because they find
     * common bug patterns in the code or enforce type safety.
     */
    "await-promise": true,
    "forin": true,
    "jquery-deferred-must-complete": true,
    "label-position": true,
    "match-default-export-name": true,
    "no-arg": true,
    "no-conditional-assignment": true,
    "no-console": [true, "debug", "info", "log", "time", "timeEnd", "trace"],
    "no-constant-condition": true,
    "no-control-regex": true,
    "no-debugger": true,
    "no-duplicate-super": true,
    "no-duplicate-switch-case": true,
    "no-duplicate-variable": true,
    "no-empty": true,
    "no-for-in-array": true,
    "no-invalid-regexp": true,
    "no-invalid-template-strings": true,
    "no-jquery-raw-elements": true,
    "no-misused-new": true,
    "no-non-null-assertion": true,
    "no-object-literal-type-assertion": true,
    "no-reference-import": true,
    "no-regex-spaces": true,
    "no-sparse-arrays": true,
    "no-string-literal": true,
    "no-string-throw": true,
    "no-unnecessary-bind": true,
    "no-unnecessary-callback-wrapper": true,
    "no-unnecessary-initializer": true,
    "no-unnecessary-override": true,
    "no-unsafe-finally": true,
    "no-unused-expression": true,
    "no-use-before-declare": true,
    "no-with-statement": true,
    "promise-function-async": true,
    "promise-must-complete": true,
    "radix": true,
    "switch-default": true,
    "switch-final-break": true,
    "triple-equals": [true, "allow-null-check"],
    "use-isnan": true,
    "use-named-parameter": true,

    
    /**
     * Code Clarity. The following rules should be turned on because they make the code
     * generally more clear to the reader.
     */
    "adjacent-overload-signatures": true,
    "array-type": [true, "array"],
    "arrow-parens": false, // for simple functions the parens on arrow functions are not needed
    "arrow-return-shorthand": true,
    "callable-types": true,
    "chai-prefer-contains-to-index-of": true,
    "chai-vague-errors": true,
    "class-name": true,
    "comment-format": [true, "check-space"],
    "function-name": [ true, {
      "method-regex":           "^[a-z][\\w\\d]+$",
      "private-method-regex":   "^[a-z][\\w\\d]+$",
      "protected-method-regex": "^[a-z][\\w\\d]+$",
      "static-method-regex":    "^[A-Z][\\w\\d]+$",
      "function-regex":         "^[a-z][\\w\\d]+$"
    }],
    "interface-name": [true, "never-prefix"],
    "jsdoc-format": true,
    "max-classes-per-file": [true, 3],  // we generally recommend making one public class per file
    "max-file-line-count": true,
    "max-func-body-length": [true, 100, {"ignore-parameters-to-function-regex": "describe"}],
    "max-line-length": [true, 140],
    "member-access": true,
    "member-ordering": [true, { "order": "fields-first" }],
    "mocha-unneeded-done": true,
    "new-parens": true,
    "no-construct": true,
    "no-duplicate-imports": true,
    "no-empty-interface": true,
    "no-for-in": true,
    "no-function-expression": true,
    "no-inferrable-types": false, // turn no-inferrable-types off in order to make the code consistent in its use of type decorations
    "no-null-keyword": false, // turn no-null-keyword off and use undefined to mean not initialized and null to mean without a value
    "no-redundant-jsdoc": true,
    "no-require-imports": true,
    "no-return-await": true,
    "no-shadowed-variable": true,
    "no-this-assignment": true,
    "no-typeof-undefined": true,
    "no-unnecessary-field-initialization": true,
    "no-unnecessary-local-variable": true,
    "no-unnecessary-qualifier": true,
    "no-unnecessary-type-assertion": true,
    "no-unsupported-browser-code": true,
    "no-useless-files": true,
    "no-var-keyword": true,
    "no-var-requires": true,
    "number-literal-format": true,
    "object-literal-sort-keys": false, // turn object-literal-sort-keys off and sort keys in a meaningful manner
    "one-variable-per-declaration": [true, "ignore-for-loop"],
    "only-arrow-functions": [true, "allow-declarations", "allow-named-functions"],
    "prefer-array-literal": true,
    "prefer-const": true,
    "prefer-for-of": true,
    "prefer-method-signature": true,
    "prefer-object-spread": true,
    "type-literal-delimiter": true,
    "typedef": [true, "parameter", "property-declaration"],
    "underscore-consistent-invocation": true,
    "unified-signatures": true,
    "use-default-type-parameter": true,
    "variable-name": true,

  
    /**
     * Whitespace related rules. The only recommended whitespace strategy is to pick a single format and
     * be consistent.
     */
    "align": [true, "parameters", "statements"],
    "curly": true,
    "eofline": true,
    "import-spacing": true,
    "indent": [true, "spaces"],
    "newline-before-return": true,
    "no-consecutive-blank-lines": true,
    "no-empty-line-after-opening-brace": false,
    "no-irregular-whitespace": true,
    "no-single-line-block-comment": false,
    "no-trailing-whitespace": true,
    "no-unnecessary-semicolons": true,
    "object-literal-key-quotes": [true, "as-needed"],
    "one-line": [true, "check-open-brace", "check-catch", "check-else", "check-whitespace"],
    "quotemark": [true, "single"],
    "semicolon": [true, "always"],
    "space-within-parens": true,
    "trailing-comma": [true, {"singleline": "never", "multiline": "never"}], // forcing trailing commas for multi-line
                     // lists results in lists that are easier to reorder and version control diffs that are more clear.
                     // Many teams like to have multiline be 'always'. There is no clear consensus on this rule but the
                     // internal MS JavaScript coding standard does discourage it.
    "typedef-whitespace": false,
    "whitespace": [true, "check-branch", "check-decl", "check-operator", "check-module", "check-separator", "check-type"]
  }
}
